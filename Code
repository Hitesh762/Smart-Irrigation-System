Code:
#include "dht.h"
#include <Key.h>
#include <Keypad.h> // Analog Pin sensor is connected to
#include <LiquidCrystal.h>
LiquidCrystal lcd(12, 11, 10, 5, 4, 3, 2);
const byte ROWS = 4; //four rows
const byte COLS = 4; //three columns
char keys[ROWS][COLS] = {
{'1','2','3','A'},
{'4','5','6','B'},
{'7','8','9','C'},
{'*','0','#','D'} };
byte rowPins[ROWS] = {17, 16, 15, 14}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {9, 8, 7, 6}; //connect to the column pinouts of the keypad

int LCDRow = 0, cur = 0;
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );
char crop[7][10] = {"corn","rice","wheat","Grapes","onion","strawbery","Apple"};
float moisture_percentage; //Live Moisture Percentage
int moisture = 25; // Set Moisture
int temperature = 27; // Live Temperature
int settemperature=30; // Set temperature
int attempt = 0; // Password Attempt
int arr[10] = {30,25,20,25,60,10,50,45}; // Array For Crop Moisture
char password[4] = {'1','2','3','4'}; // password
char mosKey = 'z'; // Select Crop Moisture Key
int CropNo = 0;
String statusWaterMotor = "OFF";
String statusDCMotor = "OFF";
String test = "ON";

byte smiley[8] = {
B00000,
B10001,
B00000,
B00000,
B10001,
B01110,
B00000,
};

void setup(){
pinMode(OUTPUT,13);
pinMode(OUTPUT,40);
pinMode(OUTPUT,30);
Serial.begin(9600);
lcd.begin(16,2);// columns, rows. use 16,2 for a 16x2 LCD, etc
lcd.clear();
infolcd();

}//end "setup()"
void loop(){ //Start of Program
int a=0;
while(a < 10){
setByUser();
delay(200);
a++;
}
moisture_percentage = getMoisture();
temperature = getTemperature();
DisplayMT();
motor();
dcmotor();
}// end loop()

void setByUser(){
char key = keypad.getKey();
if(key=='#')
{
while(attempt<=2){
int status = getPasswordValidation();
if(status == 1){
attempt = 0;
setmoisture();
settemp();
ShowCurrentCrop();
break;
}
else if(attempt == 2){
attempt++;
lcd.clear();
lcd.setCursor(0,0);
LCDPrint(" YOU ATTEMPT");
lcd.setCursor(0,1);
LCDPrint(" MANY TIME");
buzzer();

}
else if(status == 0){
attempt++;
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("WRONG PASSWORD");
lcd.setCursor(0,1);
LCDPrint("TRY AGAIN !!!");
delay(1000);
}
else if(status == -1){
return;
}
}
}
else if(key=='A')
{
Cropinfo();
}
else if(key == 'B'){
ShowCurrentCrop();
}
else if(key == 'D'){
displayMotorStatus();
}
attempt = 0;
}

int getPasswordValidation(){
char addpass[4] = {};
int j = 0;
int k = 0;
int count;
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Enter password");

lcd.setCursor(0,1);
do{
char key = keypad.getKey();
if(key)
{
count == 0;
if(key == 'C'){
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Cancelled");
delay(1000);
return -1;
}
// LCDPrint(key);
LCDPrint("*");
addpass[j] = key;
j++;
}
}while(j<4);
delay(200);

if(strncmp(addpass,password,4) == 0){
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("CORRECT PASSWORD");
delay(1000);
lcd.clear();
return 1;
}
else{
return 0;
}
}

void setmoisture(){
char key;
int j = 0;
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Crop Number");
Serial.print("Enter your crop number\n");
while(j<1){
key = keypad.getKey();
if(key)
{
if(key == 'C'){
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Cancelled");
delay(1000);
return;
}
lcd.setCursor(0,1);
LCDPrint(key);
j++;
}
}
if (key != 'C'){
int digit = key - 48;
if(digit<8 && digit>0){
moisture = arr[digit];
CropNo = digit;
}
else{
moisture = arr[0];
CropNo = 0;
}
}

delay(1000);
}

void settemp(){
int temp[2];
char key;
int j = 0;
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Set Temperature");
lcd.setCursor(0,1);
while(j<2){
key = keypad.getKey();
if(key)
{
if(key == 'C'){
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Cancelled");
delay(1000);
return;
}
LCDPrint(key);
Serial.print(key);
temp[j] = key;
j++;
}
}
settemperature=0;
settemperature+=((temp[0]-48)*10);
settemperature+=(temp[1]-48);
delay(1000);
}

void infolcd(){
lcd.setCursor(0,0);
LCDPrint("EMBEDDED SYSTEM");
lcd.setCursor(5,1);
LCDPrint("DESIGN");
delay(1500);
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("SMART IRRIGATION");
lcd.setCursor(5,1);
LCDPrint("SYSTEM");
delay(1500);
lcd.clear();
lcd.setCursor(3,0);
LCDPrint("Group - 24");
delay(1500);
lcd.clear();
lcd.setCursor(5,0);
LCDPrint("START");
delay(1000);
lcd.clear();
}

int getMoisture(){
int sensor_analog = analogRead(A2);
int moisture_percentage = ( 100 - ( (sensor_analog/1023.00) * 100 ) );
return moisture_percentage;
}

int getTemperature(){
dht DHT;
DHT.read11(A0);

int temperature1 = DHT.temperature;
return temperature1;
}

void DisplayMT(){
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Temperature = ");
LCDPrint(temperature);
lcd.setCursor(0,1);
LCDPrint("Moisture = ");
LCDPrint(moisture_percentage);
LCDPrint(" %");
}

void motor(){
if(moisture_percentage < moisture){
digitalWrite(13,HIGH);
statusWaterMotor = "ON";
}
else{
digitalWrite(13,LOW);
statusWaterMotor = "OFF";
}
}

void dcmotor()
{
if(settemperature<=temperature)
{
digitalWrite(40,HIGH);

statusDCMotor = "ON";
}
else
{
digitalWrite(40,LOW);
statusDCMotor = "OFF";
}
}

void displayMotorStatus(){
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Water Motor : ");
LCDPrint(statusWaterMotor);
lcd.setCursor(0,1);
LCDPrint("Fan : ");
LCDPrint(statusDCMotor);
delay(2000);
}
void LCDPrint(String str){
lcd.print(str);
Serial.print(str);
Serial.print("\n");
}
void LCDPrint(int str){
lcd.print(str);
Serial.print(str);
Serial.print("\n");
}

void ShowCurrentCrop(){

lcd.clear();
lcd.setCursor(0,0);
LCDPrint(crop[CropNo]);
lcd.setCursor(0,1);
LCDPrint("Need moisture : ");
LCDPrint(moisture);
LCDPrint("%");
delay(2000);
lcd.clear();
lcd.setCursor(0,0);
LCDPrint("Set Temperature ");
lcd.setCursor(0,1);
LCDPrint(settemperature);
LCDPrint("'C");
delay(2000);
lcd.clear();
}

void buzzer()
{
digitalWrite(30,HIGH);
delay(3000);
digitalWrite(30,LOW);
}

void Cropinfo()
{
for(int i=0;i<7;i++)
{
lcd.clear();
lcd.setCursor(0,0);
LCDPrint(i+1);
LCDPrint("). ");
LCDPrint(crop[i]);
LCDPrint(" : ");
LCDPrint(arr[i+1]);

i++;
if(i<7)
{
lcd.setCursor(0,1);
LCDPrint(i+1);
LCDPrint("). ");
LCDPrint(crop[i]);
LCDPrint(" : ");
LCDPrint(arr[i+1]);
}
delay(2000);
lcd.clear();
}
}
